spring.application.name=workshop_managment

# --- MySQL Datasource ---
# Override via environment variables in production; sensible defaults for local dev
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/workshopdb?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:workshop}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:password}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# --- JPA / Hibernate ---
# For development: create/alter tables automatically. Use 'validate' or migrations in prod.
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:update}
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# Enable this for more detailed session debugging
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Avoid JDBC metadata access so Hibernate doesn't need a DB connection at boot
spring.jpa.properties.hibernate.boot.allow_jdbc_metadata_access=false

# Let Hikari not fail fast if DB is down; it will retry in background
spring.datasource.hikari.initialization-fail-timeout=-1

# SSL settings for Aiven (MySQL Connector/J)
spring.datasource.hikari.data-source-properties.sslMode=${DB_SSL_MODE:DISABLED}
spring.datasource.hikari.data-source-properties.trustCertificateKeyStoreUrl=file:${user.dir}/aiven-truststore.jks
spring.datasource.hikari.data-source-properties.trustCertificateKeyStoreType=${DB_TRUSTSTORE_TYPE:JKS}
spring.datasource.hikari.data-source-properties.trustCertificateKeyStorePassword=${DB_TRUSTSTORE_PASSWORD:changeit}

# Connection pool (Hikari) tuning (optional sensible defaults)
spring.datasource.hikari.maximum-pool-size=${DB_MAX_POOL_SIZE:10}
spring.datasource.hikari.minimum-idle=${DB_MIN_IDLE:2}
spring.datasource.hikari.idle-timeout=${DB_IDLE_TIMEOUT_MS:300000}
spring.datasource.hikari.connection-timeout=${DB_CONN_TIMEOUT_MS:30000}

# --- Server ---
server.port=8081

# --- Spring Boot Actuator ---
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=never

# --- Spring Cloud Config Client (optional; enable and set URI when Config Server is up) ---
# spring.cloud.config.enabled=true
# spring.cloud.config.uri=http://localhost:8888
# spring.config.import=optional:configserver:${spring.cloud.config.uri}

# --- Feign (example base URL; replace when using a real downstream) ---
# feign.client.config.default.loggerLevel=basic
